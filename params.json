{"name":"auto-ssh-tunnel (Automatic SSH Tunnel)","tagline":"Python script to create a Reverse SSH Tunnel between multiple computers running a Unix-based client and centralized server. ","body":"# Overview\r\n\r\nAutomatic SSH Tunnel is a PYTHON script which can be used to create a reverse ssh tunnel between multiple computers running Linux and a centralized server.\r\n\r\nIt's written in PYTHON scripting language.\r\n\r\n## Why use this script?\r\n\r\nPortable: It's written in PYTHON scripting and only needs openSSH-server (openSSH-server is a tool to enable computers to behave as a pseudo server to ensure a successful reverse tunnelling).\r\nSecure: It requires a USB hardware physical transfer of the ssh keys.\r\n\r\n\r\n## Features\r\n\r\nUnix-enabled\r\nNo password required or stored\r\nSimple step-by-step configuration wizard\r\nTakes 3 steps and less than 1 minute to fully set-up\r\n\r\n# Getting started\r\n\r\n## Download\r\nFirst, clone the repository using git (recommended):\r\n\r\n$ git clone https://github.com/facerecog/auto-ssh-tunnel/\r\nThen change the PORT and the IP ADDRESS of the server we are connecting to:\r\n\r\n$ cd Client\r\n$ nano connect.py\r\nlocation_of_pem_file = \"/home/install/Downloads/auto-ssh-tunnel/server\"\r\nport_open = \"50000\"\r\nusername_ipaddress = \"server@192.168.1.202\"\r\nThen give the execution permission to the setup.py script and run it:\r\n\r\n$ sudo python setup.py install\r\nThe first time you run setup.py install, you'll be guided through a wizard in order to configure ssh as a [S]erver or a [C]lient.\r\n\r\n\r\n## Configuration wizard\r\n\r\nThe configuration wizard is pretty self-explanatory. One thing to notice is that you will generate a current_directory/<server>. The file to current_directory/<server> is your pem key to enable this client to ssh to the server without the use of password. During the setup.py install, a public key will be pushed to the server and saved in /.ssh/authorized_keys You should never exchange your private pem keys to others.\r\n\r\n## Configuration as a Client\r\n\r\nGenerating public/private rsa key pair.\r\nEnter file in which to save the key (/home/anonymouse/.ssh/id_rsa): server\r\nEnter passphrase (empty for no passphrase): \r\nEnter same passphrase again: \r\nYour identification has been saved in server.\r\nYour public key has been saved in server.pub.\r\nThe key fingerprint is:\r\nbb:c6:9c:ee:6b:c0:67:58:b2:bb:4b:44:72:d3:cc:a5 localhost@localhost\r\nThe key's randomart image is:\r\nConfiguration as a Server\r\n\r\n$ ifconfig\r\nPort forward your IP address to port 22 on your modem or router\r\n\r\n##Available commands\r\n\r\nconnect.py; Manually connect the client to the server\r\nTested Environments\r\n\r\n\r\nRaspberry Pi\r\nUbuntu 14.04 LTS\r\nCustomer Service and Support\r\n\r\nIf you want to support this project, please consider reaching out to me:\r\n\r\nEmail: muhd.amrullah@facerecog.asia\r\n\r\n\r\nProperty of Facerecog Asia Pte. Ltd. and 26 Factorial\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}